{
	"info": {
		"_postman_id": "b1e9d6a4-7077-443b-86bd-48c5357a86bb",
		"name": "ServeRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resposta = pm.response.json();\r",
									"pm.environment.set(\"token\", resposta.authorization);\r",
									"\r",
									"pm.test(\"Status 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Login realizado com sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{senha}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resposta = pm.response.json();\r",
									"pm.environment.set(\"token\", resposta.authorization);\r",
									"\r",
									"pm.test(\"Status 4001\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Login inválido\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Email e/ou senha inválidos\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"teste@ebac.com.br\",\r\n  \"password\": \"{{senha}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pesquisar usuário por ID cadastrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios/{{idUsuario}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"{{idUsuario}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Usuários",
			"item": [
				{
					"name": "Criar um novo usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Contém o texto\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Teste de retorno com ID válido\", function () {\r",
									"    pm.response.to.have.jsonBody(\"_id\");\r",
									"});\r",
									"\r",
									"const resposta = pm.response.json();\r",
									"pm.environment.set(\"idUsuario\", resposta._id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('email', pm.variables.replaceIn('{{$randomEmail}}'));\r",
									"pm.environment.set('nome', pm.variables.replaceIn('{{$randomFileName}}'));\r",
									"pm.environment.set('senha', pm.variables.replaceIn('{{$randomPassword}}'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{senha}}\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lista de todos usuários",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Teste de quantidade de usuários na lista\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.usuarios).to.have.length(12); \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Teste de campos em cada usuário\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    for (let user of jsonData.usuarios) {\r",
									"        pm.expect(user).to.have.keys(\"nome\", \"email\", \"password\", \"administrador\", \"_id\");\r",
									"        \r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Teste para verificar se o campo 'administrador' é uma string 'true' or 'false'\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    for (let user of jsonData.usuarios) {\r",
									"        pm.expect(user.administrador).to.be.oneOf([\"true\", \"false\"]);\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obter informações de um usuário específico",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains user details\", function () {\r",
									"    pm.response.to.have.jsonBody('nome');\r",
									"    pm.response.to.have.jsonBody('email');\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios/{{idUsuario}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"{{idUsuario}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excluir usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registro excluído com sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios/{{idUsuario}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"{{idUsuario}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excluir usuário não encontrado na base",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registro não existente na base\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios/9zXPqLKEbw8j2Y5A",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"9zXPqLKEbw8j2Y5A"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar senha do usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Contém o texto\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"teste@123\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios/{{idUsuario}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"{{idUsuario}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}